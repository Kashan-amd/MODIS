name: Laravel CI

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

permissions:
  contents: write

env:
  COMPOSER_CACHE_DIR: ${{ runner.temp }}/composer-cache
  CACHE_COMPOSER_KEY: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
  CACHE_NODE_KEY: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer:v2

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: ${{ env.CACHE_COMPOSER_KEY }}

      - name: Install Composer dependencies (dev)
        run: composer install --no-interaction --prefer-dist --no-progress --ansi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Node dependencies (reproducible)
        run: npm ci

      - name: Run Pint (PHP style)
        run: vendor/bin/pint

      - name: Run frontend lints
        run: npm run lint || true

  build:
    name: Build & Cache
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer:v2
          coverage: false

      - name: Cache Composer vendor
        uses: actions/cache@v4
        with:
          path: vendor
          key: build-vendor-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            build-vendor-

      - name: Install Composer dependencies (no-dev)
        run: composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev --no-progress --no-ansi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Node dependencies (CI)
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Cache config & routes
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan optimize

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: laravel-build
          path: |
            public/build
            vendor
            bootstrap/cache

  # tests:
  #   name: Run Tests
  #   runs-on: ubuntu-latest
  #   needs: build
  #   services:
  #     mysql:
  #       image: mysql:8.0
  #       env:
  #         MYSQL_ROOT_PASSWORD: password
  #         MYSQL_DATABASE: test_db
  #       ports:
  #         - 3306:3306
  #       options: >-
  #         --health-cmd="mysqladmin ping --silent"
  #         --health-interval=10s --health-timeout=5s --health-retries=3
  #   env:
  #     DB_CONNECTION: mysql
  #     DB_HOST: 127.0.0.1
  #     DB_PORT: 3306
  #     DB_DATABASE: test_db
  #     DB_USERNAME: root
  #     DB_PASSWORD: password
  #     APP_KEY: ${ { secrets.APP_KEY } }
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: "8.4"
  #         tools: composer:v2
  #         coverage: xdebug

  #     - name: Install Composer dependencies
  #       run: composer install --no-interaction --prefer-dist --no-progress

  #     - name: Create .env for testing
  #       run: |
  #         cp .env.example .env
  #         php artisan key:generate --no-interaction --force
  #         php artisan migrate --env=testing --no-interaction

  #     - name: Run PHPUnit
  #       run: ./vendor/bin/phpunit --testsuite=Feature

  #     - name: Upload Test Logs
  #       if: failure()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: phpunit-logs
  #         path: storage/logs
