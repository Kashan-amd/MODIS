name: Laravel CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

permissions:
  contents: read

env:
  COMPOSER_ALLOW_SUPERUSER: "1"
  COMPOSER_NO_INTERACTION: "1"

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    environment: Development
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"

      - name: Cache Composer and vendor
        uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache
            vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP dependencies (for linting)
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Setup Node (for tooling like Pint if needed)
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install Node Dependencies
        # Use npm ci when package-lock.json exists for deterministic and faster installs
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --prefer-offline --progress=false
          else
            npm install --no-audit --prefer-offline --progress=false
          fi

      - name: Run Pint
        run: vendor/bin/pint

  build:
    name: Build & Optimize
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP (with composer)
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          tools: composer:v2
          coverage: xdebug

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP dependencies (development)
        run: composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev --no-progress

      - name: Setup Node & cache
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node Dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --prefer-offline --progress=false
          else
            npm install --no-audit --prefer-offline --progress=false
          fi

      - name: Build Assets
        run: npm run build --silent

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate --ansi

      - name: Optimize Framework
        run: |
          php artisan config:cache
          php artisan route:cache || true
          php artisan view:cache || true
          php artisan optimize

      # Uncomment to run tests; left commented for faster build by default
      # - name: Run Tests
      #   run: ./vendor/bin/phpunit --colors=always
